{"version":3,"file":"static/js/620.8e6f715c.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAM,+BAENC,EAAiB,mCAAG,oGACHC,IAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IAD5C,cAClBI,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qDAKjBC,EAAsB,mCAAG,WAAMC,GAAN,0EACxBA,EADwB,yCAEpB,IAFoB,uBAIRL,IAAAA,IAAA,UAChBF,EADgB,iCACYD,EADZ,kBACyBQ,IALjB,cAIvBJ,EAJuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUtBG,EAAe,mCAAG,WAAMC,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAAaF,EAAb,kBAA0BS,EAA1B,oBAA6CV,IAJ5C,cAIhBI,EAJgB,yBAKfA,EAAOC,MALQ,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKO,MAPG,2CAAH,sDAUfC,EAAe,mCAAG,WAAMH,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKC,SAPG,2CAAH,uD,6GCCrB,UAjCkB,WACd,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAAwBK,EAAAA,EAAAA,UAAS,IAAjC,eAAOH,EAAP,KAAaI,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACN,GAAKP,EAAL,CAGA,IAAMQ,EAAc,mCAAG,qGACEP,EAAAA,EAAAA,IAAgBD,GADlB,OACbN,EADa,OAEnBY,EAAQZ,GAFW,2CAAH,qDAIpBc,OACD,CAACR,KAGA,gBAAKS,UAAU,iBAAf,UACI,eAAIA,UAAU,YAAd,SACKP,EAAKQ,KAAI,SAACC,GACP,IAAMC,EAASD,EAAME,aAAN,yCAAuDF,EAAME,cArBtE,wGAsBN,OACI,gBAAmBJ,UAAU,YAA7B,WACI,gBAAKK,IAAKF,EAAQG,IAAKJ,EAAMK,QAC7B,cAAGP,UAAU,aAAb,SAA2BE,EAAMK,QACjC,eAAGP,UAAU,iBAAb,wBAA0CE,EAAMM,eAH3CN,EAAMO","sources":["api.js","components/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '9c85c2414d8624d6e18c2da3e97d3f7e';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const result = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return result.data.results;\n};\n\nconst getMoviesBySearchQuery = async searchQuery => {\n  if (!searchQuery) {\n    return [];\n  }\n  const result = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return result.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n  return result.data;\n};\n\nconst getMovieCredits = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return result.data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return result.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMoviesBySearchQuery,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getMovieCredits } from \"api\";\n\nconst IMAGE_PLACEHOLDER = \"https://upload.wikimedia.org/wikipedia/commons/thumb/b/bc/Unknown_person.jpg/694px-Unknown_person.jpg\";\n\nconst MovieCast = () => { \n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) {\n            return\n        }\n        const fetchMovieCast = async () => {\n            const result = await getMovieCredits(movieId);\n            setCast(result);\n        }\n        fetchMovieCast();\n    }, [movieId]);\n\n    return (\n        <div className=\"cast-container\">\n            <ul className=\"cast-list\">\n                {cast.map((actor) => {\n                    const imgUrl = actor.profile_path ? `http://image.tmdb.org/t/p/w500/${actor.profile_path}` : IMAGE_PLACEHOLDER;\n                    return (\n                        <li key={actor.id} className=\"cast-item\">\n                            <img src={imgUrl} alt={actor.name} />\n                            <p className=\"cast-actor\">{actor.name}</p>\n                            <p className=\"cats-character\">Character: {actor.character}</p>\n                        </li>\n                    )\n                })}    \n            </ul>\n        </div >\n    )\n};\n    \nexport default MovieCast"],"names":["KEY","URL","getTrendingMovies","axios","result","data","results","getMoviesBySearchQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","setCast","useEffect","fetchMovieCast","className","map","actor","imgUrl","profile_path","src","alt","name","character","id"],"sourceRoot":""}