{"version":3,"file":"static/js/838.e1c82cb2.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAM,+BAENC,EAAiB,mCAAG,oGACHC,IAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IAD5C,cAClBI,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qDAKjBC,EAAsB,mCAAG,WAAMC,GAAN,0EACxBA,EADwB,yCAEpB,IAFoB,uBAIRL,IAAAA,IAAA,UAChBF,EADgB,iCACYD,EADZ,kBACyBQ,IALjB,cAIvBJ,EAJuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUtBG,EAAe,mCAAG,WAAMC,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAAaF,EAAb,kBAA0BS,EAA1B,oBAA6CV,IAJ5C,cAIhBI,EAJgB,yBAKfA,EAAOC,MALQ,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKO,MAPG,2CAAH,sDAUfC,EAAe,mCAAG,WAAMH,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKC,SAPG,2CAAH,uD,6GCArB,UAlCqB,WACjB,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA8BK,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACN,GAAKR,EAAL,CAGA,IAAMS,EAAiB,mCAAG,qGACDN,EAAAA,EAAAA,IAAgBH,GADf,OAChBN,EADgB,OAEtBa,EAAWb,GAFW,2CAAH,qDAIvBe,OACD,CAACT,KAGA,gBAAKU,UAAU,oBAAf,SACKJ,EAAQK,QACL,eAAKD,UAAU,eAAf,SACKJ,EAAQM,KAAI,SAACC,GACV,OACI,gBAAoBH,UAAU,eAA9B,WACI,eAAGA,UAAU,iBAAb,qBAAuCG,EAAOC,WAC9C,cAAGJ,UAAU,iBAAb,SAA+BG,EAAOE,YAFjCF,EAAOG,SAO1B","sources":["api.js","components/MovieReviews/MovieReviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '9c85c2414d8624d6e18c2da3e97d3f7e';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const result = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return result.data.results;\n};\n\nconst getMoviesBySearchQuery = async searchQuery => {\n  if (!searchQuery) {\n    return [];\n  }\n  const result = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return result.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n  return result.data;\n};\n\nconst getMovieCredits = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return result.data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return result.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMoviesBySearchQuery,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from \"api\";\n\nconst MovieReviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) {\n            return\n        }\n        const fetchMovieReviews = async () => {\n            const result = await getMovieReviews(movieId);\n            setReviews(result);\n        }\n        fetchMovieReviews();\n    }, [movieId]);\n\n    return (\n        <div className=\"reviews-container\">\n            {reviews.length ?\n                < ul className=\"reviews-list\">\n                    {reviews.map((review) => {\n                        return (\n                            <li key={review.id} className=\"reviews-item\">\n                                <p className=\"reviews-author\">Author: {review.author}</p>\n                                <p className=\"cats-character\">{review.content}</p>\n                            </li>\n                        )\n                    })}\n                </ul>\n                : \"We don`t have any reviews for this movie\"\n            }\n        </div >\n    )\n};\n\nexport default MovieReviews;"],"names":["KEY","URL","getTrendingMovies","axios","result","data","results","getMoviesBySearchQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","className","length","map","review","author","content","id"],"sourceRoot":""}