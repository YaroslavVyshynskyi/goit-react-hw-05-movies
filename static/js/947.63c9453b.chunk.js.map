{"version":3,"file":"static/js/947.63c9453b.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAM,+BAENC,EAAiB,mCAAG,oGACHC,IAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IAD5C,cAClBI,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qDAKjBC,EAAsB,mCAAG,WAAMC,GAAN,0EACxBA,EADwB,yCAEpB,IAFoB,uBAIRL,IAAAA,IAAA,UAChBF,EADgB,iCACYD,EADZ,kBACyBQ,IALjB,cAIvBJ,EAJuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUtBG,EAAe,mCAAG,WAAMC,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAAaF,EAAb,kBAA0BS,EAA1B,oBAA6CV,IAJ5C,cAIhBI,EAJgB,yBAKfA,EAAOC,MALQ,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKO,MAPG,2CAAH,sDAUfC,EAAe,mCAAG,WAAMH,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKC,SAPG,2CAAH,uD,sHCerB,UA9CqB,WACjB,IAAQI,GAAYI,EAAAA,EAAAA,MAAZJ,QACR,GAA0BK,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACN,GAAKR,EAAL,CAGA,IAAMS,EAAU,mCAAG,qGACMV,EAAAA,EAAAA,IAAgBC,GADtB,OACTN,EADS,OAEfa,EAASb,GAFM,2CAAH,qDAIhBe,OACD,CAACT,IAEJ,IAAMU,EAAc,IAAIC,KAAKL,EAAMM,cAAcC,cAC3CC,GAAeR,EAAMS,QAAU,IAAIC,KAAI,YACzC,OADuD,EAAXC,QAI1CC,EAASZ,EAAMa,YAAN,yCAAsDb,EAAMa,aAtBrD,qGAwBtB,OACI,iBAAKC,UAAU,2BAAf,WACI,SAAC,KAAD,CAAMC,GAAG,IAAID,UAAU,aAAvB,sBACA,gBAAKA,UAAU,wBAAf,UACI,gBAAKE,IAAOJ,EAAQK,IAAKjB,EAAMkB,WAEnC,iBAAKJ,UAAU,sBAAf,WACI,gBAAIA,UAAU,eAAd,UAA8Bd,EAAMkB,MAApC,KAA6Cd,EAA7C,QACA,eAAGU,UAAU,sBAAb,yBAAgDK,KAAKC,MAAyB,GAAnBpB,EAAMqB,cAAjE,QACA,eAAIP,UAAU,uBAAd,uBACA,cAAGA,UAAU,sBAAb,SAAoCd,EAAMsB,YAC1C,eAAIR,UAAU,uBAAd,qBACA,cAAGA,UAAU,sBAAb,SAAoCN,EAAYe,KAAK,YAEzD,iBAAKT,UAAU,mCAAf,WACI,eAAIA,UAAU,uBAAd,qCACA,SAAC,KAAD,CAAMC,GAAG,OAAOD,UAAU,8BAA1B,mBACA,SAAC,KAAD,CAAMC,GAAG,UAAUD,UAAU,8BAA7B,yBAEJ,SAAC,KAAD","sources":["api.js","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '9c85c2414d8624d6e18c2da3e97d3f7e';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const result = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return result.data.results;\n};\n\nconst getMoviesBySearchQuery = async searchQuery => {\n  if (!searchQuery) {\n    return [];\n  }\n  const result = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return result.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n  return result.data;\n};\n\nconst getMovieCredits = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return result.data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return result.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMoviesBySearchQuery,\n  getMovieCredits,\n  getMovieReviews,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport { Link, Outlet } from \"react-router-dom\";\nimport { getMovieDetails } from 'api';\n\nconst IMAGE_PLACEHOLDER = \"https://cdn.vectorstock.com/i/1000x1000/60/33/film-clip-black-silhouette-icon-vector-20326033.webp\"\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    \n    useEffect(() => {\n        if (!movieId) {\n            return\n        }\n        const fetchMovie = async () => {\n            const result = await getMovieDetails(movieId);\n            setMovie(result);\n        }\n        fetchMovie();\n    }, [movieId])\n\n    const releaseYear = new Date(movie.release_date).getFullYear();\n    const movieGenres = (movie.genres || []).map(({ name }) => { \n        return name;\n    })\n\n    const imgUrl = movie.poster_path ? `http://image.tmdb.org/t/p/w500/${movie.poster_path}` : IMAGE_PLACEHOLDER;\n\n    return (\n        <div className=\"movie-details__container\">\n            <Link to=\"/\" className='back__link'>Go back</Link>\n            <div className=\"movie-details__poster\">\n                <img src = {imgUrl} alt={movie.title} />\n            </div>\n            <div className=\"movie-details__info\">\n                <h1 className=\"movie__title\">{movie.title} ({releaseYear})</h1>\n                <p className='movie-details__text'>User Score: {Math.round(movie.vote_average*10)}%</p>\n                <h2 className='movie-details__title'>Overview</h2>\n                <p className='movie-details__text'>{movie.overview}</p>\n                <h2 className='movie-details__title'>Genres</h2>\n                <p className='movie-details__text'>{movieGenres.join(\", \")}</p>\n            </div>\n            <div className=\"movie-additional-info__container\">\n                <h2 className='movie-details__title'>Additional information</h2>\n                <Link to=\"cast\" className=\"movie-additional-info__link\">Cast</Link>\n                <Link to=\"reviews\" className=\"movie-additional-info__link\">Reviews</Link>\n            </div> \n            <Outlet/>\n        </div>\n    )  \n};\n\nexport default MovieDetails;"],"names":["KEY","URL","getTrendingMovies","axios","result","data","results","getMoviesBySearchQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useParams","useState","movie","setMovie","useEffect","fetchMovie","releaseYear","Date","release_date","getFullYear","movieGenres","genres","map","name","imgUrl","poster_path","className","to","src","alt","title","Math","round","vote_average","overview","join"],"sourceRoot":""}