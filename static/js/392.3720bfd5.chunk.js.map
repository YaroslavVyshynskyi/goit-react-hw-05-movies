{"version":3,"file":"static/js/392.3720bfd5.chunk.js","mappings":"4TAEMA,EAAM,mCACNC,EAAM,+BAENC,EAAiB,mCAAG,oGACHC,IAAAA,IAAA,UAAaF,EAAb,uCAA+CD,IAD5C,cAClBI,EADkB,yBAEjBA,EAAOC,KAAKC,SAFK,2CAAH,qDAKjBC,EAAsB,mCAAG,WAAMC,GAAN,0EACxBA,EADwB,yCAEpB,IAFoB,uBAIRL,IAAAA,IAAA,UAChBF,EADgB,iCACYD,EADZ,kBACyBQ,IALjB,cAIvBJ,EAJuB,yBAOtBA,EAAOC,KAAKC,SAPU,2CAAH,sDAUtBG,EAAe,mCAAG,WAAMC,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAAaF,EAAb,kBAA0BS,EAA1B,oBAA6CV,IAJ5C,cAIhBI,EAJgB,yBAKfA,EAAOC,MALQ,2CAAH,sDAQfM,EAAe,mCAAG,WAAMD,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKO,MAPG,2CAAH,sDAUfC,EAAe,mCAAG,WAAMH,GAAN,0EACjBA,EADiB,yCAEb,MAFa,uBAIDP,IAAAA,IAAA,UAChBF,EADgB,kBACHS,EADG,4BACwBV,IALvB,cAIhBI,EAJgB,yBAOfA,EAAOC,KAAKC,SAPG,2CAAH,uD,mJCrCrB,GAAgB,WAAa,kC,SCyD7B,EArDqB,WACjB,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMX,EAAcU,EAAaE,IAAI,SAC/BC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACN,GAAKf,EAAL,CAGA,IAAMgB,EAAW,mCAAG,qGACKjB,EAAAA,EAAAA,IAAuBC,GAD5B,OACVJ,EADU,OAEhBY,EAAUZ,GAFM,2CAAH,qDAIjBoB,OACD,CAAChB,IAEJ,IAAMiB,EAAiB,mCAAG,WAAOC,GAAP,uEACtBA,EAAEC,iBAEIC,EAAOF,EAAEG,cACfV,EAAgB,CAAEW,MAAOF,EAAKG,SAASC,YAAYC,QACnDL,EAAKM,QALiB,2CAAH,sDAQvB,OACI,iBAAKC,UAAWC,EAAAA,0BAAhB,WACI,kBAAMD,UAAWC,EAAAA,WAAgBC,SAAUZ,EAA3C,WACI,kBACIU,UAAU,oBACVG,KAAK,cACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAalC,GAAe,mBAEhC,mBAAQ+B,KAAK,SAASJ,UAAWC,EAAAA,mBAAjC,wBAIJ,eAAID,UAAWC,EAAAA,qBAAf,SACKrB,EAAO4B,KAAI,SAACC,GACT,OACI,eAAmBT,UAAWC,EAAAA,qBAA9B,UACI,SAAC,KAAD,CAAMS,GAAE,UAAKD,EAAME,IAAMX,UAAWC,EAAAA,qBAA0BW,MAAO,CAACC,KAAK,GAAD,OAAK3B,EAAS4B,UAAd,OAAyB5B,EAAS6B,SAA5G,SAAwHN,EAAMO,SADzHP,EAAME","sources":["api.js","webpack://goit-react-hw-05-movies/./src/components/SearchMovies/SearchMovies.module.css?b223","components/SearchMovies/SearchMovies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '9c85c2414d8624d6e18c2da3e97d3f7e';\nconst URL = 'https://api.themoviedb.org/3';\n\nconst getTrendingMovies = async () => {\n  const result = await axios.get(`${URL}/trending/movie/day?api_key=${KEY}`);\n  return result.data.results;\n};\n\nconst getMoviesBySearchQuery = async searchQuery => {\n  if (!searchQuery) {\n    return [];\n  }\n  const result = await axios.get(\n    `${URL}/search/movie?api_key=${KEY}&query=${searchQuery}`\n  );\n  return result.data.results;\n};\n\nconst getMovieDetails = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(`${URL}/movie/${movieId}?api_key=${KEY}`);\n  return result.data;\n};\n\nconst getMovieCredits = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/credits?api_key=${KEY}`\n  );\n  return result.data.cast;\n};\n\nconst getMovieReviews = async movieId => {\n  if (!movieId) {\n    return null;\n  }\n  const result = await axios.get(\n    `${URL}/movie/${movieId}/reviews?api_key=${KEY}`\n  );\n  return result.data.results;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMoviesBySearchQuery,\n  getMovieCredits,\n  getMovieReviews,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchForm\":\"SearchMovies_SearchForm__+8CwD\"};","import React, { useEffect, useState } from \"react\";\nimport { Link, useSearchParams, useLocation } from \"react-router-dom\";\nimport { getMoviesBySearchQuery } from \"api\";\nimport css from \"./SearchMovies.module.css\"\n\nconst SearchMovies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const searchQuery = searchParams.get(\"query\");\n    const location = useLocation();\n    \n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n        const fetchMovies = async () => { \n            const result = await getMoviesBySearchQuery(searchQuery);\n            setMovies(result);\n        }\n        fetchMovies();\n    }, [searchQuery])\n\n    const handleInputSubmit = async (e) => {\n        e.preventDefault();\n        \n        const form = e.currentTarget;\n        setSearchParams({ query: form.elements.searchMovie.value });\n        form.reset();\n    };\n\n    return (\n        <div className={css.trendingMovies__container}>\n            <form className={css.SearchForm} onSubmit={handleInputSubmit}>\n                <input\n                    className=\"SearchForm__input\"\n                    name=\"searchMovie\"\n                    type=\"text\"\n                    autoComplete=\"off\"\n                    autoFocus\n                    placeholder={searchQuery || \"Search movies\"}\n                />\n                <button type=\"submit\" className={css.searchForm__button}>\n                    Search\n                </button>\n            </form>\n            <ul className={css.trendingMovies__list}>\n                {movies.map((movie) => {\n                    return (\n                        <li key={movie.id} className={css.trendingMovies__item}>\n                            <Link to={`${movie.id}`} className={css.trendingMovies__name} state={{from: `${location.pathname}${location.search}`}}>{movie.title}</Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        </div>\n    )\n};\n\nexport default SearchMovies;"],"names":["KEY","URL","getTrendingMovies","axios","result","data","results","getMoviesBySearchQuery","searchQuery","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetchMovies","handleInputSubmit","e","preventDefault","form","currentTarget","query","elements","searchMovie","value","reset","className","css","onSubmit","name","type","autoComplete","autoFocus","placeholder","map","movie","to","id","state","from","pathname","search","title"],"sourceRoot":""}